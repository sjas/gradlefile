apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
//apply plugin: 'clover'
//apply plugin: 'pmd'
//apply plugin: 'checkstyle'
//apply plugin: 'findbugs'

repositories {
    mavenCentral()
    // jcenter() // repo for CLOVER, named 'bintree'
} 

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.+'
    // classpath 'org.gradle.api.plugins:gradle-clover-plugin:0.8.1' // CLOVER
}

// fix project structure from src/main/java to 'src' and src/main/test to 'tests'
sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'resources'
        }
    }
    test {
        java {
            srcDir 'tests'
        }
    }
}

[compileJava, compileTestJava]*.options.collect {
	options -> options.encoding = 'UTF-8'
} 

test {
    reports.html.enabled = false
    ignoreFailures = true
    // Next two lines needed so only the AllTests.java meta-file containing all other unit tests is executed.
    // Otherwise all tests will be run twice. If no AllTests file is present, commment them out.
    scanForTestClasses = false
    include '**/AllTests.class'
    //exclude '**'
}


///////////////////////////////////////
// TASKS BELOW ARE CURRENTLY NOT NEEDED
///////////////////////////////////////

//uploadArchives {
//    repositories {
//        flatDir {
//            dirs 'repos'
//        }
//    }
//}

// WORKING CODE FROM COLLEAGUE
//pmd {
//    ruleSets = ["basic", "braces", "codesize", "naming"]
//} 
//run {
    //// pass arguments to Main class
    //if(project.hasProperty('args')){
        //args project.args.split('\\s+')
    //}
//}

// THIS BELOW IS JUST C&P, CODE NEVER RAN
//clover {
//    classesBackupDir = file("${sourceSets.main.classesDir}-backup")
//    licenseLocation = 'clover-license.txt'
//    excludes = ['**/SynchronizedMultiValueMap.java']
//    targetPercentage = '85%'
//
//    contexts {
//        statement {
//            name = 'log'
//            regexp = '^.*LOG\\..*'
//        }
//
//        method {
//            name = 'main'
//            regexp = 'public static void main\\(String args\\[\\]\\).*'
//        } //    }
//
//    report {
//        html = true
//        pdf = true
//        filter = 'log,if,else'
//    }
//}
